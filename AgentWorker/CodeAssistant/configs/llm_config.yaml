# 代码助手场景 - LLM配置
# 针对代码生成、代码审查、代码优化等任务优化的LLM配置

llm_config:
  # 默认模型配置 - 代码生成需要强逻辑和准确性
  default_model: "gpt-4o"
  backup_model: "gpt-4o-mini"
  
  # 模型参数配置
  model_parameters:
    temperature: 0.1        # 极低温度，确保代码的准确性和一致性
    max_tokens: 8000        # 支持较长的代码生成
    top_p: 0.95            # 高准确性采样
    frequency_penalty: 0.1  # 轻微避免重复代码模式
    presence_penalty: 0.0   # 不惩罚技术术语的重复使用
  
  # 代码助手特定配置
  code_assistant:
    # 函数生成配置
    function_generation:
      model: "gpt-4o"
      temperature: 0.05     # 函数生成需要最高精确度
      max_tokens: 4000
      system_prompt: |
        你是一位专业的软件工程师。在生成代码时，请：
        1. 确保代码语法正确且可执行
        2. 遵循最佳编程实践和设计模式
        3. 添加清晰的注释和文档
        4. 包含适当的错误处理
        5. 考虑代码的安全性和性能
        6. 提供完整的类型注解（如果语言支持）
    
    # 类设计配置
    class_design:
      model: "gpt-4o"
      temperature: 0.1
      max_tokens: 6000
      system_prompt: |
        你是面向对象设计专家。设计类时请：
        1. 遵循SOLID原则
        2. 设计清晰的接口和抽象
        3. 考虑类之间的关系和依赖
        4. 提供完整的构造函数和方法
        5. 添加详细的文档字符串
        6. 考虑扩展性和可维护性
    
    # 代码审查配置
    code_review:
      model: "gpt-4o"
      temperature: 0.2      # 代码审查需要一定的创造性思维
      max_tokens: 5000
      system_prompt: |
        你是高级代码审查专家。审查代码时请：
        1. 检查代码质量和最佳实践
        2. 识别潜在的安全漏洞
        3. 评估性能瓶颈和优化机会
        4. 检查错误处理和边界条件
        5. 提供具体的改进建议
        6. 评估代码的可读性和可维护性
    
    # 代码优化配置
    code_optimization:
      model: "gpt-4o"
      temperature: 0.15
      max_tokens: 6000
      system_prompt: |
        你是代码优化专家。优化代码时请：
        1. 保持原有功能不变
        2. 提升代码性能和效率
        3. 改善代码结构和可读性
        4. 减少代码复杂度
        5. 优化算法和数据结构
        6. 提供优化说明和性能对比
    
    # API设计配置
    api_design:
      model: "gpt-4o"
      temperature: 0.1
      max_tokens: 7000
      system_prompt: |
        你是API设计专家。设计API时请：
        1. 遵循RESTful设计原则
        2. 设计清晰的请求/响应格式
        3. 包含完整的错误处理
        4. 添加安全认证和授权
        5. 提供详细的API文档
        6. 考虑版本管理和向后兼容
    
    # 代码解释配置
    code_explanation:
      model: "gpt-4o-mini"  # 解释任务可以使用较小模型
      temperature: 0.3      # 解释需要一定的表达灵活性
      max_tokens: 4000
      system_prompt: |
        你是代码教学专家。解释代码时请：
        1. 使用通俗易懂的语言
        2. 逐步分解复杂的逻辑
        3. 解释关键算法和数据结构
        4. 指出重要的设计决策
        5. 提供学习建议和扩展阅读
        6. 根据用户水平调整解释深度
  
  # 编程语言特定配置
  language_configs:
    python:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "PEP8"
      max_line_length: 88
      type_hints: true
      docstring_style: "Google"
      linting_rules: ["flake8", "mypy", "black"]
    
    javascript:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "ESLint"
      max_line_length: 100
      use_strict: true
      es_version: "ES2022"
      linting_rules: ["eslint", "prettier"]
    
    typescript:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "TypeScript ESLint"
      strict_mode: true
      type_checking: "strict"
      linting_rules: ["@typescript-eslint"]
    
    java:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "Google Java Style"
      java_version: "17"
      package_conventions: true
      documentation: "JavaDoc"
    
    go:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "Go Code Review Comments"
      gofmt: true
      golint: true
      error_handling: "explicit"
    
    rust:
      model: "gpt-4o"
      temperature: 0.1
      style_guide: "Rust Style Guide"
      cargo_fmt: true
      clippy: true
      memory_safety: "strict"
  
  # 提供商配置
  providers:
    primary: "openai"
    fallback: ["azure_openai", "anthropic"]
  
  # OpenAI配置
  openai:
    api_key_env: "OPENAI_API_KEY"
    base_url: "https://api.openai.com/v1"
    timeout: 120          # 代码生成可能需要更长时间
    max_retries: 3
  
  # Azure OpenAI配置
  azure_openai:
    api_key_env: "AZURE_OPENAI_API_KEY"
    endpoint_env: "AZURE_OPENAI_ENDPOINT"
    api_version: "2024-02-01"
    timeout: 120
  
  # Anthropic配置 (Claude在代码任务上表现出色)
  anthropic:
    api_key_env: "ANTHROPIC_API_KEY"
    model: "claude-3-sonnet-20240229"
    timeout: 120
  
  # 代码安全配置
  security:
    # 危险代码检测
    dangerous_code_detection:
      enabled: true
      blocked_functions:
        - "eval"
        - "exec"
        - "compile"
        - "__import__"
        - "os.system"
        - "subprocess.call"
      
      warning_patterns:
        - "rm -rf"
        - "DELETE FROM"
        - "DROP TABLE"
        - "format(.*input"
    
    # 安全最佳实践
    security_best_practices:
      enabled: true
      enforce_input_validation: true
      require_error_handling: true
      check_sql_injection: true
      check_xss_vulnerabilities: true
  
  # 代码质量配置
  quality_control:
    # 语法检查
    syntax_validation:
      enabled: true
      strict_mode: true
      
    # 静态分析
    static_analysis:
      enabled: true
      complexity_threshold: 10
      maintainability_index: 70
      
    # 测试覆盖率
    test_coverage:
      enabled: true
      minimum_coverage: 80
      require_unit_tests: true
  
  # 缓存配置
  caching:
    enabled: true
    cache_duration: 1800    # 30分钟，代码变化较快
    cache_by_language: true
    cache_code_snippets: true
    invalidate_on_security_update: true
  
  # 速率限制
  rate_limits:
    requests_per_minute: 40  # 代码生成请求较复杂
    tokens_per_minute: 150000
    concurrent_requests: 2   # 代码生成串行处理更安全
  
  # 版本控制集成
  version_control:
    enabled: true
    track_code_changes: true
    commit_message_generation: true
    diff_analysis: true

# 开发环境配置
development:
  # IDE集成
  ide_integration:
    supported_ides: ["vscode", "pycharm", "intellij", "vim", "emacs"]
    auto_completion: true
    real_time_suggestions: true
    
  # 调试支持
  debugging:
    enabled: true
    generate_debug_code: true
    explain_errors: true
    suggest_fixes: true
    
  # 代码格式化
  formatting:
    auto_format: true
    preserve_style: false
    consistent_indentation: true

# 学习和适应
learning:
  # 代码风格学习
  style_learning:
    enabled: true
    learn_from_codebase: true
    adapt_to_team_style: true
    
  # 最佳实践更新
  best_practices_update:
    enabled: true
    track_new_patterns: true
    update_recommendations: true

# 日志配置
logging:
  level: "DEBUG"          # 代码场景需要详细日志
  log_file: "logs/code_assistant_llm.log"
  log_requests: true
  log_responses: false    # 代码内容敏感，避免完整记录
  log_security_checks: true
  log_code_analysis: true
  log_performance: true 